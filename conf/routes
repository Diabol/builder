# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index()

# Show list of all pipes
GET     /pipes                      controllers.Pipes.list()
GET     /pipes/setupSocket          controllers.Pipes.setupSocket()

GET     /startButtons               controllers.Pipes.startButtons()

# Start a task in a pipe, eg if a task is manual
POST    /pipe/:pipe/:version/:phase/:task   controllers.Pipes.startTask(task: String, phase: String, pipe: String, version: String)

#Get the log file for a given task
GET     /pipe/:pipe/:version/:phase/:task/log controllers.Pipes.getTaskLog(task: String, phase: String, pipe: String, version: String)

#Get the tas details in html
GET     /pipe/:pipe/:version/:phase/:task/details controllers.Pipes.taskDetails(task: String, phase: String, pipe: String, version: String)

# Get tasks for a specific pipe and phase of the latest version
GET     /pipe/:pipe/latest/:phase/tasks controllers.Pipes.getTasksForLatestVersion(pipe: String, phase: String)

# Get tasks for a specific pipe, version and phase
GET		/pipe/:pipe/:version/:phase/tasks controllers.Pipes.getTasks(pipe: String, version:String, phase: String)

# Get phases of a specific pipe of the latest version
GET    /pipe/:pipe/latest/phases		  controllers.Pipes.getPhasesForLatestVersion(pipe: String)

# Get phases for a specific pipe and version
GET		/pipe/:pipe/:version/phases		  controllers.Pipes.getPhases(pipe:String, version:String)

# Get the latest version of all pipes
GET	   /pipes/latest						controllers.Pipes.getLatestPipes()

# Get the latest version of all pipes for a given environment
GET    /pipes/:environment                  controllers.Pipes.getPipesForEnvironment(environment: String)

# Get the latest version of a pipe
GET 	/pipe/:pipe/latest					controllers.Pipes.getLatestPipe(pipe: String)

# Get a map from all versions of a pipe to version control info, respectively.
GET	   /pipe/:pipe/versionMap							controllers.Pipes.getPipeVersions(pipe: String)

# Get the pipe of a specific version
GET 	/pipe/:pipe/:version				controllers.Pipes.getPipe(pipe: String, version: String)

# Get the latest number of versions of a specific pipe
GET		/pipe/:pipe/latest/:number			controllers.Pipes.getNumberOfLatestPipe(pipe: String, number: Int)

# Start a pipe, ie create a new Pipe instance
POST    /pipe/:pipe                 controllers.Pipes.start(pipe: String)

#Rebuilds latest version of a pipe with major version incremented by 1. Minor version is reset to 1
POST	/pipe/:pipe/incrementMajor controllers.Pipes.incrementMajor(pipe: String)

POST    /pipe/:pipe/github  			controllers.GitHub.start(pipe: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
